The primary objective behind the creation of Java was to develop a platform-independent, secure, and portable
programming language that could run on any device -"write once, run anywhere."

1) Simple: Easy to learn with a clean syntax; removes complex features like pointers and operator overloading.

2) Object-Oriented: Everything is treated as an object; promotes code reusability and modularity using
    classes and objects.

3) Platform Independent: Java code is compiled into byte code, which can run on any OS with a JVM -
    "write once, run anywhere."

4)Secure: Build-in security features like bytecode verification, no pointer usage, and sandboxing prevent
    unauthorized access.

5) Robust: Strong memory management, exception handling, and type checking make Java reliable and less error-prone.

6) Portable: Java programs can move easily from one system to another without changes, thanks to platform-independent
    bytecode.

7) Multithreaded: Supports concurrent execution of two or more threads for performing multiple tasks simultaneously.

8) Architecture Neutral: Java's bytecode is not dependent on any specific hardware or OS architecture.

9) High performance: Faster than traditional interpreted languages due to bytecode execution and Just-In-Time(JIT)
    compiler.

10) Distributed: Supports building applications that can run over a network; includes tools like RMI and sockets.

11) Dynamic: Can adapt to evolving environments by loading classes at runtime and supporting dynamic linking.

12) Interpreted: Bytecode is interpreted by the JVM, allowing cross-platform execution and easier debugging.

Note: Pavan-Justify all the above points while working with Java in real-time.

